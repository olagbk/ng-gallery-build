{"version":3,"sources":["../../inlined/component/gallery-text/gallery-text.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAe,UAAA,EAAY,SAAA,EAAW,uBAAA,EAAwB,MAAM,eAAA,CAAgB;AAKvG;IAKE,8BAAoB,EAAc,EAAU,QAAmB;QAA3C,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;IAC/D,CAAC;IAED,uCAAQ,GAAR;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACjC,eAAe;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACrD,CAAC;QAED,gBAAgB;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IACD,4CAAa,GAAb;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,CAAU,UAAoB,EAApB,KAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,EAApB,cAAoB,EAApB,IAAoB;gBAA7B,IAAI,CAAC,SAAA;gBACN,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;aACJ;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAkBH,2BAAC;AAAD,CAtDA,AAsDC;;AAjBM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE,kWAAkW;gBAC5W,MAAM,EAAE,CAAC,scAAsc,CAAC;gBAChd,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;CAClB,EAH6F,CAG7F,CAAC;AACK,mCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC3B,CAAC","file":"gallery-text.component.js","sourceRoot":"","sourcesContent":["import {Component, Input, OnInit, ElementRef, Renderer2, ChangeDetectionStrategy} from '@angular/core';\nimport {GalleryState} from '../../service/gallery.state';\nimport {GalleryDescConfig} from '../../config';\n\n\nexport class GalleryTextComponent implements OnInit {\n\n   state: GalleryState;\n   config: GalleryDescConfig;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    const el = this.el.nativeElement;\n    // text overlay\n    if (this.config.overlay) {\n      this.renderer.setStyle(el, 'position', 'absolute');\n    }\n\n    // text position\n    if (this.config.position === 'top') {\n      this.renderer.setStyle(el, 'order', 0);\n      this.renderer.setStyle(el, 'top', 0);\n      this.renderer.setStyle(el, 'bottom', 'unset');\n    } else {\n      this.renderer.setStyle(el, 'order', 2);\n      this.renderer.setStyle(el, 'top', 'unset');\n      this.renderer.setStyle(el, 'bottom', 0);\n    }\n  }\n  hasValidTitle() {\n    const title = this.state.images[this.state.currIndex].text;\n    if (this.config.prefixes) {\n        for (let p of this.config.prefixes) {\n            if (title.indexOf(p) === 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'gallery-text',\n  template: \"\\n    <div class=\\\"g-text-container\\\" [ngStyle]=\\\"config.style\\\">\\n      <div *ngIf=\\\"config.counter\\\" class=\\\"g-number\\\">\\n        {{(state.currIndex + 1) + '/' + state.images.length}}\\n      </div>\\n      <div *ngIf=\\\"config.text && hasValidTitle()\\\" class=\\\"g-text\\\" [innerHtml]=\\\"state.images[state.currIndex]?.text\\\">\\n      </div>\\n    </div>\\n  \",\n  styles: [\"\\n    *{box-sizing:border-box}:host{position:relative;left:0;right:0;z-index:1}.g-text-container{padding:1em 2em;color:#ccc;font-size:13px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-line-pack:center;align-content:center;background-clip:padding-box;-webkit-font-smoothing:antialiased}.g-text{-webkit-box-flex:1;-ms-flex:1;flex:1}\\n  \"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'config': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}